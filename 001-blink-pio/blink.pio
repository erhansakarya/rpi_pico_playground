.program blink

; turn on led for 100 cycles and off for 100 cycles
; at 2khz, this will toggle pin at 10Hz (200 cycles / 2000 Hz = 0.1 sec)

.wrap_target
    set pins, 1 [19]    ; turn on led and wait another 19 cycles
    nop [19]            ; wait 20 cycles
    nop [19]            ; wait 20 cycles
    nop [19]            ; wait 20 cycles
    nop [19]            ; wait 20 cycles
    set pins, 0 [19]    ; turn off led and wait another 19 cycles
    nop [19]            ; wait 20 cycles
    nop [19]            ; wait 20 cycles
    nop [19]            ; wait 20 cycles
    nop [19]            ; wait 20 cycles    
.wrap

% c-sdk {
// Helper function (for use in C program) to initialize this PIO program
void blink_program_init(PIO pio, uint sm, uint offset, uint pin, float div) {
    // sets up state machine and wrap target. This function is automatically generated in blink.pio.h
    pio_sm_config c = blink_program_get_default_config(offset);

    // allow PIO to control GPIO pin (as output)
    pio_gpio_init(pio, pin);

    // connect pin to set pin (control with 'set' instruction)
    sm_config_set_set_pins(&c, pin, 1);

    // set the pin direction to output (in PIO)
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    // set the clock divider for state machine
    sm_config_set_clkdiv(&c, div);

    // load configuration and jump to start of the program
    pio_sm_init(pio, sm, offset, &c);
}
%}